import os import json from datetime import datetime from flask import Flask, request import telebot

–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

BOT_TOKEN = os.environ.get("BOT_TOKEN")  # –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ, —á–µ–º –ø–∏—Å–∞—Ç—å —Ç–æ–∫–µ–Ω –≤ –∫–æ–¥–µ ADMIN_ID = int(os.environ.get("ADMIN_ID", "123456789"))  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 123456789

bot = telebot.TeleBot(BOT_TOKEN) app = Flask(name)

–ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º

USERS_FILE = "users.json" TIMER_FILE = "timer.json" ORGANIZERS_FILE = "organizers.json"

–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö

if os.path.exists(USERS_FILE): with open(USERS_FILE) as f: users = json.load(f) else: users = {}

if os.path.exists(ORGANIZERS_FILE): with open(ORGANIZERS_FILE) as f: organizers = json.load(f) else: organizers = [ADMIN_ID]

if os.path.exists(TIMER_FILE): with open(TIMER_FILE) as f: timer_data = json.load(f) else: timer_data = {"timestamp": None}

user_states = {}

/start

@bot.message_handler(commands=["start"]) def cmd_start(message): uid = message.from_user.id name = message.from_user.first_name or "–ò–≥—Ä–æ–∫" is_admin = uid in organizers role = "–í—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –∏–≥—Ä—ã. –í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã." if is_admin else "–í—ã –∏–≥—Ä–æ–∫." bot.send_message(uid, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}!\n{role}")

/help

@bot.message_handler(commands=["help"]) def cmd_help(message): help_text = ( "\U0001F4D6 –ö–æ–º–∞–Ω–¥—ã:\n" "/start ‚Äì –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n" "/help ‚Äì –í—Å–µ –∫–æ–º–∞–Ω–¥—ã\n" "/info ‚Äì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω–∫—É—Ä—Å–µ\n" "/contact ‚Äì –°–≤—è–∑—å —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º\n" "/event ‚Äì –ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω–∫—É—Ä—Å" ) if message.from_user.id in organizers: help_text += "\n(–°–∫—Ä—ã—Ç—ã–µ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ /admin)" bot.send_message(message.chat.id, help_text)

/info

@bot.message_handler(commands=["info"]) def cmd_info(message): if timer_data["timestamp"]: event_time = datetime.fromtimestamp(timer_data["timestamp"]) now = datetime.now() delta = event_time - now if delta.total_seconds() > 0: days = delta.days hours = delta.seconds // 3600 minutes = (delta.seconds % 3600) // 60 timer_text = f"\u23F3 –î–æ –Ω–∞—á–∞–ª–∞ –∫–æ–Ω–∫—É—Ä—Å–∞: {days} –¥–Ω {hours} —á {minutes} –º–∏–Ω" else: timer_text = "\U0001F389 –ö–æ–Ω–∫—É—Ä—Å —É–∂–µ –Ω–∞—á–∞–ª—Å—è!" else: timer_text = "\u23F3 –î–æ –Ω–∞—á–∞–ª–∞ –∫–æ–Ω–∫—É—Ä—Å–∞: –°–∫–æ—Ä–æ"

info = (
    "\U0001F3AE –ö–æ–Ω–∫—É—Ä—Å –æ—Ç wokolad\n"
    "\U0001F310 –°–µ—Ä–≤–µ—Ä: play.24mine.ru\n"
    "\U0001F4F1 –ü–æ—Ä—Ç: 19133\n"
    "\U0001F9E9 –í–µ—Ä—Å–∏—è: Minecraft PE 0.14.x\n"
    "\U0001F381 –ü—Ä–∏–∑: –î–æ–Ω–∞—Ç –∫–µ–π—Å\n"
    f"{timer_text}"
)
bot.send_message(message.chat.id, info)

/contact

@bot.message_handler(commands=["contact"]) def cmd_contact(message): bot.send_message(message.chat.id, "\U0001F4E9 –°–≤—è–∑—å —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º: https://t.me/feedback_for_event_bot")

/event (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è)

@bot.message_handler(commands=["event"]) def cmd_event(message): bot.send_message(message.chat.id, "\U0001F4DD –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?") user_states[message.chat.id] = {"step": 1, "answers": {}}

/admin

@bot.message_handler(commands=["admin"]) def cmd_admin(message): if message.from_user.id not in organizers: return text = ( "\U0001F6E0 –ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã:\n" "/settimer ‚Äì –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –∫–æ–Ω–∫—É—Ä—Å–∞\n" "/participants ‚Äì –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n" "/promote ID ‚Äì –ü–æ–≤—ã—Å–∏—Ç—å –¥–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞" ) bot.send_message(message.chat.id, text)

/settimer

@bot.message_handler(commands=["settimer"]) def cmd_settimer(message): if message.from_user.id not in organizers: return bot.send_message(message.chat.id, "\U0001F4C5 –í–≤–µ–¥–∏ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è (–ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú)") user_states[message.chat.id] = {"admin_timer": True}

/participants

@bot.message_handler(commands=["participants"]) def cmd_participants(message): if message.from_user.id not in organizers: return text = "\U0001F4CB –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n" for uid, data in users.items(): text += f"\n\U0001F464 @{data.get('username', '-')}, ID: {uid}\n" for k, v in data['answers'].items(): text += f"‚Ä¢ {k}: {v}\n" bot.send_message(message.chat.id, text or "–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ—Ç")

/promote

@bot.message_handler(commands=["promote"]) def cmd_promote(message): if message.from_user.id not in organizers: return parts = message.text.split() if len(parts) != 2: bot.send_message(message.chat.id, "‚ùó –ò—Å–ø–æ–ª—å–∑—É–π: /promote 123456789") return try: new_admin = int(parts[1]) if new_admin not in organizers: organizers.append(new_admin) with open(ORGANIZERS_FILE, "w") as f: json.dump(organizers, f) bot.send_message(message.chat.id, f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_admin} —Ç–µ–ø–µ—Ä—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä") else: bot.send_message(message.chat.id, "–£–∂–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä") except: bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –≤ ID")

–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞)

@bot.message_handler(func=lambda msg: msg.chat.id in user_states) def handle_state(msg): state = user_states[msg.chat.id] if "admin_timer" in state: try: dt = datetime.strptime(msg.text, "%Y-%m-%d %H:%M") timer_data["timestamp"] = int(dt.timestamp()) with open(TIMER_FILE, "w") as f: json.dump(timer_data, f) bot.send_message(msg.chat.id, f"‚úÖ –¢–∞–π–º–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {dt}") except: bot.send_message(msg.chat.id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏–º–µ—Ä: 2025-07-10 18:30") user_states.pop(msg.chat.id) return

step = state.get("step")
if step == 1:
    state["answers"]["–ò–º—è"] = msg.text
    bot.send_message(msg.chat.id, "‚úÖ –¢—ã –ø—Ä–∏–¥—ë—à—å –Ω–∞ –∫–æ–Ω–∫—É—Ä—Å? (–î–∞ / –ù–µ—Ç / –ù–µ –∑–Ω–∞—é)")
    state["step"] = 2
elif step == 2:
    state["answers"]["–ü—Ä–∏–¥—ë—Ç"] = msg.text
    bot.send_message(msg.chat.id, "üåç –û—Ç–∫—É–¥–∞ —Ç—ã?")
    state["step"] = 3
elif step == 3:
    state["answers"]["–ú–µ—Å—Ç–æ"] = msg.text
    users[str(msg.from_user.id)] = {
        "username": msg.from_user.username or "-",
        "answers": state["answers"]
    }
    with open(USERS_FILE, "w") as f:
        json.dump(users, f, indent=2)
    bot.send_message(msg.chat.id, "üéâ –°–ø–∞—Å–∏–±–æ, —Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")
    user_states.pop(msg.chat.id)

Flask endpoints

@app.route("/", methods=["GET"]) def home(): return "Bot is running!"

@app.route("/", methods=["POST"]) def webhook(): update = telebot.types.Update.de_json(request.data.decode("utf-8")) bot.process_new_updates([update]) return "ok", 200

–ó–∞–ø—É—Å–∫

if name == "main": app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 8080)))
